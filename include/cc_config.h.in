/**
 * \file include/cc_config.h
 *
 * \author Chris Luke <chrisy@flirble.org>
 * \copyright Copyright (c) Chris Luke <chrisy@flirble.org>
 *
 * \copyright This file is distributed under the terms of the MIT License.
 * See the LICENSE file at the top of this tree, or if it is missing a copy can
 * be found at http://opensource.org/licenses/MIT
 */

#ifndef CC_CONFIG_H
#define CC_CONFIG_H

/* Set the CC_INLINE macro */
#ifdef __cplusplus
# define CC_INLINE inline
#else
# define CC_INLINE @cc_inline@
#endif

/* Setup our NOINLINE macro */
#ifdef __GNUC__
# define CC_NOINLINE __attribute__ ((noinline))
#else
# define CC_NOINLINE
#endif

#define MAX(a, b)  ((a) > (b) ? (a) : (b))
#define MIN(a, b)  ((a) < (b) ? (a) : (b))

#define HALT() { \
        dbgf("HALT at %s line %d." EOL EOL, \
             __FILE__, __LINE__); \
        __disable_irq(); \
        NVIC_SystemReset(); \
}

#define HALT_WITH_MSG(msg) { \
        dbgf("HALT for %s at %s line %d." EOL EOL, \
             msg, __FILE__, __LINE__); \
        __disable_irq(); \
        for (;; ) ; \
}

#define RESET() { \
        dbgf("RESET at %s line %d." EOL EOL, \
             __FILE__, __LINE__); \
        __disable_irq(); \
        NVIC_SystemReset(); \
}

#define RESET_WITH_MSG(msg) { \
        dbgf("RESET for %s at %s line %d." EOL EOL, \
             msg, __FILE__, __LINE__); \
        __disable_irq(); \
        NVIC_SystemReset(); \
}

#define ASSERT(x) { if (!(x)) { \
                        dbgf("ASSERT failed at %s line %d, restarting." EOL EOL, \
                             __FILE__, __LINE__); \
                        __disable_irq(); \
                        NVIC_SystemReset(); \
                    } }

#define assert_param(x) ASSERT(x)

#endif /* CC_CONFIG_H */

// vim: set softtabstop=4 shiftwidth=4 tabstop=4 expandtab:
